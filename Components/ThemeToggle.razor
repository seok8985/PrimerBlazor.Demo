@inject IJSRuntime JS
<div class="d-inline-block">
    @if (IsDarkModeInitialized)
    {
        <PrimerIconButton Icon="@(IsDarkMode ? IconName.Moon16 : IconName.Sun16)"
                          Variant="ButtonVariant.Invisible"
                          Size="ButtonSize.Medium"
                          AriaLabelName="@AriaLabel"
                          @onclick="ToggleTheme" />
    }
</div>

@code {
    private bool IsDarkMode { get; set; } = false;
    private bool IsDarkModeInitialized { get; set; } = false;
    private Dictionary<string, object>? LightVars;
    private Dictionary<string, object>? DarkVars;
    [Parameter] public string? AriaLabel { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var saved = await JS.InvokeAsync<string>("localStorage.getItem", "theme");
            IsDarkMode = saved == "dark";
            IsDarkModeInitialized = true;
            StateHasChanged();
        }
    }

    private async Task ToggleTheme()
    {
        IsDarkMode = !IsDarkMode;
        var mode = IsDarkMode ? "dark" : "light";
        await JS.InvokeVoidAsync("setTheme", mode);
    }
}
